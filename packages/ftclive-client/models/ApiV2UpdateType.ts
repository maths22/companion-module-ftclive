/**
 * FTC Live Scoring System API
 * FTC Live Scoring System public API. This API may be used by 3rd party developers to create applications and services using the data stored by the local FTC Live Server. <h3>Guidelines</h3> Applications may run on any computer that is on the same network as the scoring system. Applications that are co-hosted on the scoring computer should not attempt to reach into the scoring system\'s databases directly. It\'s assumed that the primary purpose of a 3rd party application is to publish match data to a cloud server. Care should be taken to ensure that the scorekeeping computer is on a secure network. If using live scoring, an isolated 5Ghz network for the scoring server and tablet trackers is preferred. Event participants must not have access to this network even as the computer running the 3rd party application has access to the broader internet. Applications should be sensitive to how often they poll for data. Please remember that third party applications are by their very nature accessories to the critical functions of scoring an event. No 3rd party application should ever be the source of performance issues with FTCLive. To that end, when polling for match results, it\'s not going to matter if the application gets the results many multiples of seconds after they\'ve been committed to the database. Poll too fast and FTCLive reserves the right to blackball an application by returning HTTP Status 429 for all requests. <h4>Rate Limiting</h4> The scoring system implements rate limiting to safe-guard the primary mission of the scoring system to support the event. Before the system has loaded any match for play, the rate limit is more generous and allows for 1200 requests per 5 minute period, per event. Routes that do not access a specific event are pooled together. Once a match has been loaded for play, the rate drops to 30 requests per 5 minute period per event. This limit is applied across all access from any application, so multiple applications may cause each other to go over the limit. Applications that require faster access or believe that they are being starved by another application may request an API key using the `/api/v1/keyrequest/` route. See the route details for more information. <h3>Rankings</h3> Applications must not generate their own rankings from match data without explicitly labelling them as not event official. The easiest to reach rankings, if not the only rankings available, should only be populated from the rankings resource described below. <h3>API Syntax</h3> The FTCLive API uses a RESTful architecture to define a set of URIs operating over the GET method. POST, PUT, and DELETE are not supported. 3rd party applications may not modify the FTClive database. 3rd party applications should be sensitive to how often they query the server. To keep the API surface as simple as possible a \"Nouns are good; verbs are bad\" approach is defined. Given that access to the underlying database is read only, GET is implied. For any given resource the resource without parameters returns an array of all elements, the resource with a parameter returns a detailed description of the element. To reduce the total number of resources, all resources that operate over a collection of data are defined as plural even when selecting only one element in a collection. All public api resources paths begin with `/api/`. All paths must have a trailing forward slash. All query responses are json formatted text. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.js';

export enum ApiV2UpdateType {
    MatchLoad = 'MATCH_LOAD',
    MatchStart = 'MATCH_START',
    MatchAbort = 'MATCH_ABORT',
    MatchCommit = 'MATCH_COMMIT',
    MatchPost = 'MATCH_POST',
    ShowPreview = 'SHOW_PREVIEW',
    ShowMatch = 'SHOW_MATCH',
    InitSubmitted = 'INIT_SUBMITTED'
}
